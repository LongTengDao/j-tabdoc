{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","global.ts","util.ts","parse.ts","stringify.ts","Space.ts","export.ts"],
	"sourcesContent":
		[
			"export default '2.3.0';",
			"import hasOwnProperty from '.Object.prototype.hasOwnProperty';\n\nimport Buffer from '.Buffer';\nexport var toStringFollowBOM;\nexport var isBuffer = /*#__PURE__*/ function () {\n\tif ( typeof Buffer==='function' ) {\n\t\tvar isBuffer = Buffer.isBuffer;\n\t\tif ( typeof isBuffer==='function' && typeof Buffer.from==='function' ) {\n\t\t\tvar from = Buffer.from;\n\t\t\tif ( typeof from==='function' ) {\n\t\t\t\tif ( !hasOwnProperty.call(Buffer, 'from') ) {\n\t\t\t\t\tfrom = function from (buffer) :Buffer { return new Buffer(buffer); };\n\t\t\t\t}\n\t\t\t\ttoStringFollowBOM = function toStringFollowBOM (buffer :Buffer) :string {\n\t\t\t\t\tswitch ( buffer[0] ) {\n\t\t\t\t\t\tcase 0xEF: if ( buffer[1]===0xBB && buffer[2]===0xBF ) { return buffer.slice(3).toString('utf8'); } break;\n\t\t\t\t\t\tcase 0xFF: if ( buffer[1]===0xFE ) { return buffer.slice(2).toString('ucs2'); } break;\n\t\t\t\t\t\tcase 0xFE: if ( buffer[1]===0xFF ) { buffer = from(buffer); return buffer.swap16().slice(2).toString('ucs2'); } break;\n\t\t\t\t\t}\n\t\t\t\t\treturn buffer.toString();\n\t\t\t\t};\n\t\t\t\treturn isBuffer;\n\t\t\t}\n\t\t}\n\t}\n\treturn function isBuffer () :boolean { return false; };\n}();",
			"export var POSITIVE_INTEGER = /^[1-9]\\d*$/;\n\nexport var repeatSpace = ''.repeat\n\t? function repeatSpace (count :number) :string { return ' '.repeat(count); }\n\t: function (spaces :undefined[]) :typeof repeatSpace {\n\t\treturn function repeatSpace (count :number) :string {\n\t\t\tspaces.length = count+1;\n\t\t\treturn spaces.join(' ');\n\t\t};\n\t}([]);\n\nexport function notStringArray (array :any[]) :boolean {\n\tfor ( var length :number = array.length, index :number = 0; index<length; ++index ) {\n\t\tif ( typeof array[index]!=='string' ) { return true; }\n\t}\n\treturn false;\n}\n",
			"import undefined from '.void';\nimport isArray from '.Array.isArray?=';\nimport { isBuffer, toStringFollowBOM } from './global';\nimport TypeError from '.TypeError';\nimport RangeError from '.RangeError';\nimport Error from '.Error';\nimport { POSITIVE_INTEGER, notStringArray } from './util';\n\nvar BOM = /^\\uFEFF/;\nvar EOL = /\\r\\n?|\\n/;\n\ntype element = { key :string, value :string[], number :number };\ntype groupReviver = {\n\t0 :{ exec :(string :string) => RegExpExecArray },\n\t1 :(group :element | element[], context :any) => any,\n};\ndeclare class level extends Array {\n\t[index :number] :number | element | element[];\n\tnumber? :number;\n}\ntype levelReviver = (level :level, context :any) => any;\n\nexport default function parse (\n\tthis :any,\n\ttabLines :string[] | string | Buffer,\n\t_reviver? :{\n\t\tempty? :true | false,\n\t\tgroup? :null | boolean | groupReviver[],\n\t\tlevel? :null | levelReviver,\n\t},\n\t_number? :number,\n\t_debug? :true | false\n) :any {\n\tif ( !isArray(tabLines) ) {\n\t\tif ( typeof tabLines==='string' ) { tabLines = tabLines.replace(BOM, '').split(EOL); }\n\t\telse if ( isBuffer(tabLines) ) { tabLines = toStringFollowBOM(tabLines).split(EOL); }\n\t}\n\tif ( _reviver==null ) {\n\t\tvar countEmpties :undefined | boolean = true;\n\t\tvar groupRevivers :undefined | null | boolean | groupReviver[] = null;\n\t\tvar levelReviver :undefined | null | levelReviver = null;\n\t}\n\telse {\n\t\tcountEmpties = _reviver.empty;\n\t\tgroupRevivers = _reviver.group;\n\t\tlevelReviver = _reviver.level;\n\t\tif ( countEmpties===undefined ) { countEmpties = true; }\n\t\tif ( groupRevivers===undefined ) { groupRevivers = null; }\n\t\tif ( levelReviver===undefined ) { levelReviver = null; }\n\t}\n\tif ( _number===undefined ) { _number = 1; }\n\tif ( _debug!==false ) {\n\t\tif ( arguments.length>4 ) { throw new Error('jTabDoc.parse(tabLines, reviver, number, debug, ...)'); }\n\t\tif ( <unknown>_debug===undefined ) { _debug = true; }\n\t\telse if ( _debug!==true ) { throw new TypeError('jTabDoc.stringify(,,,debug)'); }\n\t\tif ( !isArray(tabLines) ) { throw new TypeError('jTabDoc.parse(tabLines)'); }\n\t\tif ( notStringArray(<unknown[]>tabLines) ) { throw new TypeError('jTabDoc.parse(tabLines[*])'); }\n\t\tif ( typeof <unknown>countEmpties!=='boolean' ) { throw new TypeError('jTabDoc.parse(,reviver.empty)'); }\n\t\tif ( groupRevivers!==null && typeof groupRevivers!=='boolean' ) {\n\t\t\tif ( !isArray(groupRevivers) ) { throw new TypeError('jTabDoc.parse(,reviver.group)'); }\n\t\t\tvar length :number = groupRevivers.length;\n\t\t\tif ( !length ) { throw new Error('jTabDoc.parse(,reviver.group.length)'); }\n\t\t\tvar index :number = 0;\n\t\t\tdo {\n\t\t\t\tvar each :groupReviver = groupRevivers[index];\n\t\t\t\tif ( !each ) { throw new TypeError('jTabDoc.parse(,reviver.group[*])'); }\n\t\t\t\tif ( !each[0] || typeof each[0].exec!=='function' ) { throw new TypeError('jTabDoc.parse(,reviver.group[*][0])'); }\n\t\t\t\tif ( typeof each[1]!=='function' ) { throw new TypeError('jTabDoc.parse(,reviver.group[*][1])'); }\n\t\t\t}\n\t\t\twhile ( ++index<length );\n\t\t}\n\t\tif ( levelReviver!==null && typeof levelReviver!=='function' ) { throw new TypeError('jTabDoc.parse(,reviver.level)'); }\n\t\tif ( typeof _number!=='number' ) { throw new TypeError('jTabDoc.parse(,,number)'); }\n\t\tif ( !POSITIVE_INTEGER.test(_number+'') ) { throw new RangeError('jTabDoc.parse(,,number)'); }\n\t}\n\treturn tabLines.length===0\n\t\t? levelReviver===null ? [] : levelReviver([], this)\n\t\t: Level(\n\t\t\tthis,\n\t\t\t<string[]>tabLines,\n\t\t\tgroupRevivers\n\t\t\t\t? appendGroup\n\t\t\t\t: appendFlat,\n\t\t\tcountEmpties,\n\t\t\tgroupRevivers,\n\t\t\tlevelReviver,\n\t\t\t_number,\n\t\t\t_debug\n\t\t);\n};\n\nfunction Level (\n\tcontext :any,\n\ttabLines :string[],\n\tappend :typeof appendGroup | typeof appendFlat,\n\tcountEmpties :boolean,\n\tgroupRevivers :null | boolean | groupReviver[],\n\tlevelReviver :null | levelReviver,\n\tnumber :number,\n\tdebug :boolean\n) :any {\n\tvar level :level      = [],\n\t\tlastIndex :number = tabLines.length-1,\n\t\tindex :number     = 0,\n\t\tblank :boolean    = tabLines[0].length===0;\n\touter: for ( ; ; ) {\n\t\tvar from :number = index;\n\t\tif ( blank ) {\n\t\t\tif ( countEmpties ) {\n\t\t\t\tfor ( ; ; ) {\n\t\t\t\t\tif ( index===lastIndex ) {\n\t\t\t\t\t\tlevel.push(index+1-from);\n\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t}\n\t\t\t\t\tif ( tabLines[++index].length!==0 ) {\n\t\t\t\t\t\tlevel.push(index-from);\n\t\t\t\t\t\tblank = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( ; ; ) {\n\t\t\t\t\tif ( index===lastIndex ) { break outer; }\n\t\t\t\t\tif ( tabLines[++index].length!==0 ) {\n\t\t\t\t\t\tblank = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( index===lastIndex ) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tappend(context, level, countEmpties, <null | false>groupRevivers, levelReviver, tabLines, from, index, number, debug);\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif ( tabLines[++index].length===0 ) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tappend(context, level, countEmpties, <true | groupReviver[]>groupRevivers, levelReviver, tabLines, from, index-1, number, debug);\n\t\t\t\t\tblank = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlevel.number = number;\n\treturn levelReviver===null ? level : levelReviver(level, context);\n}\n\nfunction appendFlat (\n\tcontext :any,\n\tlevel :level,\n\tcountEmpties :boolean,\n\tgroupRevivers :null | false,\n\tlevelReviver :null | levelReviver,\n\ttabLines :string[],\n\tfirstIndex :number,\n\tlastIndex :number,\n\tbaseNumber :number,\n\tdebug :boolean\n) :void {\n\tvar key :string,\n\t\tvalue :string[],\n\t\tnumber :number;\n\touter: for ( var lineIndex :number = firstIndex, line :string = tabLines[lineIndex], tabIndex :number = line.indexOf('\\t'); ; ) {\n\t\tvalue = [];\n\t\tnumber = baseNumber+lineIndex;\n\t\tif ( tabIndex=== -1 ) {\n\t\t\tkey = '';\n\t\t\tvalue.push(line);\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineIndex===lastIndex ) { break outer; }\n\t\t\t\tline = tabLines[++lineIndex];\n\t\t\t\ttabIndex = line.indexOf('\\t');\n\t\t\t\tif ( tabIndex!== -1 ) { break; }\n\t\t\t\tvalue.push(line);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( tabIndex===0 ) {\n\t\t\t\tkey = '\\t';\n\t\t\t\tvalue.push(line.slice(1));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tkey = line.slice(0, tabIndex+1);\n\t\t\t\tvalue.push(line.slice(tabIndex+1));\n\t\t\t}\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineIndex===lastIndex ) {\n\t\t\t\t\tif ( groupRevivers===null ) { value = Level(context, value, appendFlat, countEmpties, null, levelReviver, number, debug); }\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tline = tabLines[++lineIndex];\n\t\t\t\ttabIndex = line.indexOf('\\t');\n\t\t\t\tif ( tabIndex!==0 ) { break; }\n\t\t\t\tvalue.push(line.slice(1));\n\t\t\t}\n\t\t\tif ( groupRevivers===null ) { value = Level(context, value, appendFlat, countEmpties, null, levelReviver, number, debug); }\n\t\t}\n\t\tlevel.push({\n\t\t\tkey: key,\n\t\t\tvalue: value,\n\t\t\tnumber: number\n\t\t});\n\t}\n\tlevel.push({\n\t\tkey: key,\n\t\tvalue: value,\n\t\tnumber: number\n\t});\n}\n\nfunction appendGroup (\n\tcontext :any,\n\tlevel :level,\n\tcountEmpties :boolean,\n\tgroupRevivers :true | groupReviver[],\n\tlevelReviver :null | levelReviver,\n\ttabLines :string[],\n\tfirstIndex :number,\n\tlastIndex :number,\n\tbaseNumber :number,\n\tdebug :boolean\n) :void {\n\tvar pendingGroup :element[] = [],\n\t\tpendingKeys :string     = '',\n\t\tkey :string,\n\t\tvalue :string[],\n\t\tnumber :number;\n\touter: for ( var lineIndex = firstIndex, line = tabLines[lineIndex], tabIndex = line.indexOf('\\t'); ; ) {\n\t\tvalue = [];\n\t\tnumber = baseNumber+lineIndex;\n\t\tif ( tabIndex=== -1 ) {\n\t\t\tkey = '';\n\t\t\tvalue.push(line);\n\t\t\tpendingKeys += '\\n';\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineIndex===lastIndex ) { break outer; }\n\t\t\t\tline = tabLines[++lineIndex];\n\t\t\t\ttabIndex = line.indexOf('\\t');\n\t\t\t\tif ( tabIndex!== -1 ) { break; }\n\t\t\t\tvalue.push(line);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( tabIndex===0 ) {\n\t\t\t\tkey = '\\t';\n\t\t\t\tvalue.push(line.slice(1));\n\t\t\t\tpendingKeys += '\\t\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tkey = line.slice(0, tabIndex+1);\n\t\t\t\tpendingKeys += key+'\\n';\n\t\t\t\tvalue.push(line.slice(tabIndex+1));\n\t\t\t}\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineIndex===lastIndex ) { break outer; }\n\t\t\t\tline = tabLines[++lineIndex];\n\t\t\t\ttabIndex = line.indexOf('\\t');\n\t\t\t\tif ( tabIndex!==0 ) { break; }\n\t\t\t\tvalue.push(line.slice(1));\n\t\t\t}\n\t\t}\n\t\tpendingGroup.push({\n\t\t\tkey: key,\n\t\t\tvalue: value,\n\t\t\tnumber: number\n\t\t});\n\t}\n\tpendingGroup.push({\n\t\tkey: key,\n\t\tvalue: value,\n\t\tnumber: number\n\t});\n\tif ( groupRevivers===true ) {\n\t\tlevel.push(pendingGroup.length===1 ? pendingGroup[0] : pendingGroup);\n\t\treturn;\n\t}\n\tfor ( var first :groupReviver = groupRevivers[0], reviverLength :number = groupRevivers.length, reviverIndex = 0, regExp_function = first; ; ) {\n\t\tvar matched :null | RegExpExecArray = regExp_function[0].exec(pendingKeys);\n\t\tif ( matched===null ) {\n\t\t\tif ( ++reviverIndex===reviverLength ) { throw new Error('jTabDoc.parse(,reviver.group[!])'); }\n\t\t\tregExp_function = groupRevivers[reviverIndex];\n\t\t}\n\t\telse {\n\t\t\tif ( debug ) {\n\t\t\t\tif ( matched===undefined ) { throw new Error('jTabDoc.parse(,reviver.group[*][0].exec())'); }\n\t\t\t\tif ( matched.index ) { throw new Error('jTabDoc.parse(,reviver.group[*][0].exec().index)'); }\n\t\t\t\tif ( typeof matched[0]!=='string' ) { throw new TypeError('jTabDoc.parse(,reviver.group[*][0].exec()[0])'); }\n\t\t\t\tif ( matched[0].length===0 ) { throw new Error('jTabDoc.parse(,reviver.group[*][0].exec()[0].length)'); }\n\t\t\t\tif ( matched[0].charAt(matched[0].length-1)!=='\\n' ) { throw new Error('jTabDoc.parse(,reviver.group[*][0].exec()[0])'); }\n\t\t\t}\n\t\t\tvar thisKeys :string = matched[0];\n\t\t\tvar keyLength :number = thisKeys.length;\n\t\t\tif ( pendingKeys.length===keyLength ) {\n\t\t\t\tlevel.push(regExp_function[1](pendingGroup.length===1 ? pendingGroup[0] : pendingGroup, context));\n\t\t\t\tif ( debug ) {\n\t\t\t\t\tif ( level[level.length-1]===undefined ) { throw new TypeError('jTabDoc.parse(,reviver.group[*][1]())'); }\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar count :number = 1;\n\t\t\tfor ( var indexOfLF :number = thisKeys.indexOf('\\n'); ; ++count ) {\n\t\t\t\tindexOfLF = thisKeys.indexOf('\\n', indexOfLF+1);\n\t\t\t\tif ( indexOfLF<0 ) { break; }\n\t\t\t}\n\t\t\tlevel.push(regExp_function[1](<element>( count===1 ? pendingGroup.shift() : pendingGroup.splice(0, count) ), context));\n\t\t\tif ( debug ) {\n\t\t\t\tif ( level[level.length-1]===undefined ) { throw new TypeError('jTabDoc.parse(,reviver.group[*][1]())'); }\n\t\t\t}\n\t\t\tpendingKeys = pendingKeys.slice(keyLength);\n\t\t\treviverIndex = 0;\n\t\t\tregExp_function = first;\n\t\t}\n\t}\n}\n",
			"import undefined from '.void';\nimport isArray from '.Array.isArray?=';\nimport push from '.Array.prototype.push';\nimport TypeError from '.TypeError';\nimport Error from '.Error';\nimport { notStringArray } from './util';\n\ntype replacer = (level :any, content :any) => ( number | { key :string, value :string[] } )[];\ntype space = (keys :string[], context :any) => { keys :typeof keys, indent :string };\n\nexport default function stringify (\n\tthis :any,\n\tlevel :any,\n\t_replacer? :null | replacer,\n\t_space? :null | space,\n\t_debug? :true | false\n) :string[] {\n\tif ( <unknown>_debug!==false ) {\n\t\tif ( arguments.length>4 ) { throw new Error('jTabDoc.stringify(level, replacer, space, debug, ...)'); }\n\t\tif ( _debug===undefined ) { _debug = true; }\n\t\telse if ( _debug!==true ) { throw new TypeError('jTabDoc.stringify(,,,debug)'); }\n\t\tif ( _replacer!=null && typeof _replacer!=='function' ) { throw new TypeError('jTabDoc.stringify(,replacer)'); }\n\t\tif ( _space!=null && typeof _space!=='function' ) { throw new TypeError('jTabDoc.stringify(,,space)'); }\n\t}\n\tif ( _replacer===undefined ) { _replacer = null; }\n\tif ( _space===undefined ) { _space = null; }\n\treturn Lines(this, level, _replacer, _space, <boolean>_debug);\n};\n\nfunction Lines (context :any, level :any, replacer :null | replacer, space :null | space, debug :boolean) {\n\tif ( replacer!==null ) { level = replacer(level, context); }\n\tif ( debug ) {\n\t\tif ( !isArray(level) ) { throw new TypeError('jTabDoc.stringify(level)'); }\n\t}\n\tvar lines :string[] = [];\n\tfor ( var levelLength :number = level.length, levelIndex :number = 0; levelIndex<levelLength; ++levelIndex ) {\n\t\tvar each :number | { key :string, value :string[] } = level[levelIndex];\n\t\tif ( debug ) {\n\t\t\tcheck(each, replacer);\n\t\t}\n\t\tif ( typeof each==='number' ) { while ( each-- ) { lines.push(''); } }\n\t\telse if ( each.key==='' ) { push.apply(lines, each.value); }\n\t\telse if ( space===null ) {\n\t\t\tpushes(lines, each.key, '\\t', replacer===null\n\t\t\t\t? Lines(context, each.value, null, space, debug)\n\t\t\t\t: each.value\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tvar keys :string[] = [each.key];\n\t\t\tvar values :string[][] = [each.value];\n\t\t\twhile ( ++levelIndex<levelLength ) {\n\t\t\t\teach = level[levelIndex];\n\t\t\t\tif ( debug ) {\n\t\t\t\t\tcheck(each, replacer);\n\t\t\t\t}\n\t\t\t\tif ( typeof each==='number' ) {\n\t\t\t\t\t--levelIndex;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tkeys.push(each.key);\n\t\t\t\tvalues.push(each.value);\n\t\t\t}\n\t\t\tvar keys_indent :{ keys :typeof keys, indent :string } = space(keys, context);\n\t\t\tif ( debug ) {\n\t\t\t\tif ( typeof keys_indent!=='object' || keys_indent===null ) { throw new TypeError('jTabDoc.stringify(,,space())'); }\n\t\t\t\tif ( !( 'keys' in keys_indent ) || !( 'indent' in keys_indent ) ) { throw new Error('jTabDoc.stringify(,,space())'); }\n\t\t\t\tif ( !isArray(keys_indent.keys) ) { throw new TypeError('jTabDoc.stringify(,,space().keys)'); }\n\t\t\t\tif ( keys_indent.keys.length!==values.length ) { throw new Error('jTabDoc.stringify(,,space().keys.length)'); }\n\t\t\t\tif ( notStringArray(keys_indent.keys) ) { throw new TypeError('jTabDoc.stringify(,,space().keys[*])'); }\n\t\t\t\tif ( typeof <unknown>keys_indent.indent!=='string' ) { throw new TypeError('jTabDoc.stringify(,,space().indent)'); }\n\t\t\t}\n\t\t\tkeys = keys_indent.keys;\n\t\t\tvar indent :string = keys_indent.indent;\n\t\t\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\t\t\tif ( keys[index]==='' ) { push.apply(lines, values[index]); }\n\t\t\t\telse {\n\t\t\t\t\tpushes(lines, keys[index], indent, replacer===null\n\t\t\t\t\t\t? Lines(context, values[index], null, space, debug)\n\t\t\t\t\t\t: values[index]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn lines;\n}\n\nfunction pushes (lines :string[], key :string, indent :string, subLines :string[]) :void {\n\tvar length :number = subLines.length;\n\tif ( length===0 ) { lines.push(key); }\n\telse {\n\t\tlines.push(key+subLines[0]);\n\t\tfor ( var index :number = 1; index<length; ++index ) {\n\t\t\tlines.push(indent+subLines[index]);\n\t\t}\n\t}\n}\n\nfunction check (each :number | { key :string, value :string[] }, replacer :null | replacer) :void {\n\tif ( typeof <unknown>each==='object' && each!==null ) {\n\t\t// @ts-ignore\n\t\tif ( !( 'key' in each ) || !( 'value' in each ) ) { throw new Error('jTabDoc.stringify('+( replacer ? ',replacer()' : 'level' )+'[*]:object)'); }\n\t\tif ( typeof <unknown>each.key!=='string' || !/^(?:[^\\t\\n\\r]*\\t)?$/.test(each.key) ) { throw new Error('jTabDoc.stringify('+( replacer ? ',replacer()' : 'level' )+'[*]:object.key)'); }\n\t\tif ( replacer!==null || each.key==='' ) {\n\t\t\tif ( !isArray(each.value) ) { throw new TypeError('jTabDoc.stringify('+( replacer ? ',replacer()' : 'level' )+'[*]:object.value)'); }\n\t\t\tif ( notStringArray(each.value) ) { throw new TypeError('jTabDoc.stringify('+( replacer ? ',replacer()' : 'level' )+'[*]:object.value[*])'); }\n\t\t}\n\t}\n\telse if ( typeof each==='number' ) {\n\t\tif ( !/^\\d+$/.test(each+'') ) { throw new Error('jTabDoc.stringify('+( replacer ? ',replacer()' : 'level' )+'[*]:number)'); }\n\t}\n\telse { throw new TypeError('jTabDoc.stringify('+( replacer ? ',replacer()' : 'level' )+'[*])'); }\n}\n",
			"import TypeError from '.TypeError';\nimport RangeError from '.RangeError';\nimport { POSITIVE_INTEGER, repeatSpace } from './util';\n\nexport default function Space (minWidth :number, padding :number) :(keys :string[]) => { keys :typeof keys, indent :string } {\n\tif ( typeof <unknown>minWidth!=='number' ) { throw new TypeError('jTabDoc.Space(minWidth)'); }\n\tif ( typeof <unknown>padding!=='number' ) { throw new TypeError('jTabDoc.Space(,padding)'); }\n\tvar multiple :boolean = minWidth<0;\n\tif ( multiple ) { minWidth = ~minWidth; }\n\tif ( !POSITIVE_INTEGER.test(minWidth+'') ) { throw new RangeError('jTabDoc.Space(minWidth)'); }\n\tif ( !POSITIVE_INTEGER.test(padding+'') ) { throw new RangeError('jTabDoc.Space(,padding)'); }\n\treturn function space (keys :string[]) :{ keys :typeof keys, indent :string } {\n\t\treturn keys_indent(multiple, minWidth, padding, keys);\n\t};\n};\n\nfunction keys_indent (multiple :boolean, minWidth :number, padding :number, keys :string[]) :{ keys :typeof keys, indent :string } {\n\tvar maxWidth :number = 1;\n\tvar widths :number[] = [];\n\tfor ( var length :number = keys.length, index :number = 0; index<length; ++index ) {\n\t\tvar width :number = 0;\n\t\tvar key :string = keys[index];\n\t\tif ( key!=='' ) {\n\t\t\tfor ( var l :number = key.length-1, i :number = 0; i<l; ++i ) {\n\t\t\t\tvar charCode :number = key.charCodeAt(i);\n\t\t\t\tif ( charCode<0x80 ) { width += 1; }\n\t\t\t\telse {\n\t\t\t\t\twidth += 2;\n\t\t\t\t\tif ( charCode>=0xD800 && charCode<=0xDBFF && i+1<l ) {\n\t\t\t\t\t\tcharCode = key.charCodeAt(i+1);\n\t\t\t\t\t\tcharCode>=0xDC00 && charCode<=0xDFFF && ++i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( width>maxWidth ) { maxWidth = width; }\n\t\t}\n\t\twidths.push(width);\n\t}\n\twidth = maxWidth+padding;\n\tif ( multiple ) {\n\t\tif ( width%minWidth ) { width += minWidth-width%minWidth; }\n\t}\n\telse {\n\t\tif ( width<minWidth ) { width = minWidth; }\n\t}\n\tfor ( index = 0; index<length; ++index ) {\n\t\tkey = keys[index];\n\t\tif ( key!=='' ) {\n\t\t\tkeys[index] = key.slice(0, -1)+repeatSpace(width-widths[index]);\n\t\t}\n\t}\n\treturn { keys: keys, indent: repeatSpace(width) };\n}\n",
			"import version from './version?text';\nimport parse from './parse';\nimport stringify from './stringify';\nimport Space from './Space';\nvar jTabDoc = {\n\tparse: parse,\n\tstringify: stringify,\n\tSpace: Space,\n\tversion: version\n};\njTabDoc['default'] = jTabDoc;\nexport {\n\tparse,\n\tstringify,\n\tSpace,\n\tversion\n};\nexport default jTabDoc;"
		],
	"names":
		["undefined"],
	"mappings":
		"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"
}