{
	"version":
		3,
	"file":
		"index.js",
	"names":
		["undefined"],
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text",".undefined",".Object.prototype.hasOwnProperty",".Object.prototype.toString",".Array.isArray","global.ts","util.ts","parse.ts",".Array.prototype.push","stringify.ts","Space.ts","export.ts"],
	"mappings":
		"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",
	"sourcesContent":
		[
			"export default '2.1.1';",
			"var UNDEFINED;export default UNDEFINED;",
			"export default Object.prototype.hasOwnProperty;",
			"export default Object.prototype.toString;",
			"export default Array.isArray;",
			"import hasOwnProperty from '.Object.prototype.hasOwnProperty';\nimport toString from '.Object.prototype.toString';\nimport Array_isArray from '.Array.isArray';\nexport var isArray = Array_isArray || function isArray(lines) { return toString.call(lines) === '[object Array]'; };\nimport Buffer from '.Buffer';\nexport var toStringFollowBOM;\nexport var isBuffer = /*#__PURE__*/ function () {\n    if (typeof Buffer === 'function') {\n        var isBuffer = Buffer.isBuffer;\n        if (typeof isBuffer === 'function' && typeof Buffer.from === 'function') {\n            var from = Buffer.from;\n            if (typeof from === 'function') {\n                if (!hasOwnProperty.call(Buffer, 'from')) {\n                    from = function from(buffer) { return new Buffer(buffer); };\n                }\n                toStringFollowBOM = function toStringFollowBOM(buffer) {\n                    switch (buffer[0]) {\n                        case 0xEF:\n                            if (buffer[1] === 0xBB && buffer[2] === 0xBF) {\n                                return buffer.slice(3).toString('utf8');\n                            }\n                            break;\n                        case 0xFF:\n                            if (buffer[1] === 0xFE) {\n                                return buffer.slice(2).toString('ucs2');\n                            }\n                            break;\n                        case 0xFE:\n                            if (buffer[1] === 0xFF) {\n                                buffer = from(buffer);\n                                return buffer.swap16().slice(2).toString('ucs2');\n                            }\n                            break;\n                    }\n                    return buffer.toString();\n                };\n                return isBuffer;\n            }\n        }\n    }\n    return function isBuffer() { return false; };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLGNBQWMsTUFBTSxrQ0FBa0MsQ0FBQztBQUM5RCxPQUFPLFFBQVEsTUFBTSw0QkFBNEIsQ0FBQztBQUNsRCxPQUFPLGFBQWEsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxNQUFNLENBQUMsSUFBSSxPQUFPLEdBQUcsYUFBYSxJQUFJLFNBQVMsT0FBTyxDQUFFLEtBQVUsSUFBYSxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUcsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFakksT0FBTyxNQUFNLE1BQU0sU0FBUyxDQUFDO0FBQzdCLE1BQU0sQ0FBQyxJQUFJLGlCQUFpQixDQUFDO0FBQzdCLE1BQU0sQ0FBQyxJQUFJLFFBQVEsR0FBRyxhQUFhLENBQUM7SUFDbkMsSUFBSyxPQUFPLE1BQU0sS0FBRyxVQUFVLEVBQUc7UUFDakMsSUFBSSxRQUFRLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUMvQixJQUFLLE9BQU8sUUFBUSxLQUFHLFVBQVUsSUFBSSxPQUFPLE1BQU0sQ0FBQyxJQUFJLEtBQUcsVUFBVSxFQUFHO1lBQ3RFLElBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDdkIsSUFBSyxPQUFPLElBQUksS0FBRyxVQUFVLEVBQUc7Z0JBQy9CLElBQUssQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsRUFBRztvQkFDM0MsSUFBSSxHQUFHLFNBQVMsSUFBSSxDQUFFLE1BQU0sSUFBWSxPQUFPLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUNyRTtnQkFDRCxpQkFBaUIsR0FBRyxTQUFTLGlCQUFpQixDQUFFLE1BQWM7b0JBQzdELFFBQVMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFHO3dCQUNwQixLQUFLLElBQUk7NEJBQUUsSUFBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUcsSUFBSSxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBRyxJQUFJLEVBQUc7Z0NBQUUsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQzs2QkFBRTs0QkFBQyxNQUFNO3dCQUMxRyxLQUFLLElBQUk7NEJBQUUsSUFBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUcsSUFBSSxFQUFHO2dDQUFFLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7NkJBQUU7NEJBQUMsTUFBTTt3QkFDdEYsS0FBSyxJQUFJOzRCQUFFLElBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFHLElBQUksRUFBRztnQ0FBRSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dDQUFDLE9BQU8sTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7NkJBQUU7NEJBQUMsTUFBTTtxQkFDdEg7b0JBQ0QsT0FBTyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQzFCLENBQUMsQ0FBQztnQkFDRixPQUFPLFFBQVEsQ0FBQzthQUNoQjtTQUNEO0tBQ0Q7SUFDRCxPQUFPLFNBQVMsUUFBUSxLQUFlLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hELENBQUMsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGhhc093blByb3BlcnR5IGZyb20gJy5PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5JztcbmltcG9ydCB0b1N0cmluZyBmcm9tICcuT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyc7XG5pbXBvcnQgQXJyYXlfaXNBcnJheSBmcm9tICcuQXJyYXkuaXNBcnJheSc7XG5leHBvcnQgdmFyIGlzQXJyYXkgPSBBcnJheV9pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkgKGxpbmVzIDphbnkpIDpib29sZWFuIHsgcmV0dXJuIHRvU3RyaW5nLmNhbGwobGluZXMpPT09J1tvYmplY3QgQXJyYXldJzsgfTtcblxuaW1wb3J0IEJ1ZmZlciBmcm9tICcuQnVmZmVyJztcbmV4cG9ydCB2YXIgdG9TdHJpbmdGb2xsb3dCT007XG5leHBvcnQgdmFyIGlzQnVmZmVyID0gLyojX19QVVJFX18qLyBmdW5jdGlvbiAoKSB7XG5cdGlmICggdHlwZW9mIEJ1ZmZlcj09PSdmdW5jdGlvbicgKSB7XG5cdFx0dmFyIGlzQnVmZmVyID0gQnVmZmVyLmlzQnVmZmVyO1xuXHRcdGlmICggdHlwZW9mIGlzQnVmZmVyPT09J2Z1bmN0aW9uJyAmJiB0eXBlb2YgQnVmZmVyLmZyb209PT0nZnVuY3Rpb24nICkge1xuXHRcdFx0dmFyIGZyb20gPSBCdWZmZXIuZnJvbTtcblx0XHRcdGlmICggdHlwZW9mIGZyb209PT0nZnVuY3Rpb24nICkge1xuXHRcdFx0XHRpZiAoICFoYXNPd25Qcm9wZXJ0eS5jYWxsKEJ1ZmZlciwgJ2Zyb20nKSApIHtcblx0XHRcdFx0XHRmcm9tID0gZnVuY3Rpb24gZnJvbSAoYnVmZmVyKSA6QnVmZmVyIHsgcmV0dXJuIG5ldyBCdWZmZXIoYnVmZmVyKTsgfTtcblx0XHRcdFx0fVxuXHRcdFx0XHR0b1N0cmluZ0ZvbGxvd0JPTSA9IGZ1bmN0aW9uIHRvU3RyaW5nRm9sbG93Qk9NIChidWZmZXIgOkJ1ZmZlcikgOnN0cmluZyB7XG5cdFx0XHRcdFx0c3dpdGNoICggYnVmZmVyWzBdICkge1xuXHRcdFx0XHRcdFx0Y2FzZSAweEVGOiBpZiAoIGJ1ZmZlclsxXT09PTB4QkIgJiYgYnVmZmVyWzJdPT09MHhCRiApIHsgcmV0dXJuIGJ1ZmZlci5zbGljZSgzKS50b1N0cmluZygndXRmOCcpOyB9IGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAweEZGOiBpZiAoIGJ1ZmZlclsxXT09PTB4RkUgKSB7IHJldHVybiBidWZmZXIuc2xpY2UoMikudG9TdHJpbmcoJ3VjczInKTsgfSBicmVhaztcblx0XHRcdFx0XHRcdGNhc2UgMHhGRTogaWYgKCBidWZmZXJbMV09PT0weEZGICkgeyBidWZmZXIgPSBmcm9tKGJ1ZmZlcik7IHJldHVybiBidWZmZXIuc3dhcDE2KCkuc2xpY2UoMikudG9TdHJpbmcoJ3VjczInKTsgfSBicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGJ1ZmZlci50b1N0cmluZygpO1xuXHRcdFx0XHR9O1xuXHRcdFx0XHRyZXR1cm4gaXNCdWZmZXI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdHJldHVybiBmdW5jdGlvbiBpc0J1ZmZlciAoKSA6Ym9vbGVhbiB7IHJldHVybiBmYWxzZTsgfTtcbn0oKTsiXX0=",
			"export var POSITIVE_INTEGER = /^[1-9]\\d*$/;\nexport var repeatSpace = ''.repeat\n    ? function repeatSpace(count) { return ' '.repeat(count); }\n    : function (spaces) {\n        return function repeatSpace(count) {\n            spaces.length = count + 1;\n            return spaces.join(' ');\n        };\n    }([]);\nexport function notStringArray(array) {\n    for (var length = array.length, index = 0; index < length; ++index) {\n        if (typeof array[index] !== 'string') {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLElBQUksZ0JBQWdCLEdBQUcsWUFBWSxDQUFDO0FBRTNDLE1BQU0sQ0FBQyxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUMsTUFBTTtJQUNqQyxDQUFDLENBQUMsU0FBUyxXQUFXLENBQUUsS0FBYSxJQUFZLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUUsQ0FBQyxDQUFDLFVBQVUsTUFBbUI7UUFDOUIsT0FBTyxTQUFTLFdBQVcsQ0FBRSxLQUFhO1lBQ3pDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsS0FBSyxHQUFDLENBQUMsQ0FBQztZQUN4QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDekIsQ0FBQyxDQUFDO0lBQ0gsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBRVAsTUFBTSxVQUFVLGNBQWMsQ0FBRSxLQUFZO0lBQzNDLEtBQU0sSUFBSSxNQUFNLEdBQVcsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLEdBQVcsQ0FBQyxFQUFFLEtBQUssR0FBQyxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUc7UUFDbkYsSUFBSyxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBRyxRQUFRLEVBQUc7WUFBRSxPQUFPLElBQUksQ0FBQztTQUFFO0tBQ3REO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBQT1NJVElWRV9JTlRFR0VSID0gL15bMS05XVxcZCokLztcblxuZXhwb3J0IHZhciByZXBlYXRTcGFjZSA9ICcnLnJlcGVhdFxuXHQ/IGZ1bmN0aW9uIHJlcGVhdFNwYWNlIChjb3VudCA6bnVtYmVyKSA6c3RyaW5nIHsgcmV0dXJuICcgJy5yZXBlYXQoY291bnQpOyB9XG5cdDogZnVuY3Rpb24gKHNwYWNlcyA6dW5kZWZpbmVkW10pIDp0eXBlb2YgcmVwZWF0U3BhY2Uge1xuXHRcdHJldHVybiBmdW5jdGlvbiByZXBlYXRTcGFjZSAoY291bnQgOm51bWJlcikgOnN0cmluZyB7XG5cdFx0XHRzcGFjZXMubGVuZ3RoID0gY291bnQrMTtcblx0XHRcdHJldHVybiBzcGFjZXMuam9pbignICcpO1xuXHRcdH07XG5cdH0oW10pO1xuXG5leHBvcnQgZnVuY3Rpb24gbm90U3RyaW5nQXJyYXkgKGFycmF5IDphbnlbXSkgOmJvb2xlYW4ge1xuXHRmb3IgKCB2YXIgbGVuZ3RoIDpudW1iZXIgPSBhcnJheS5sZW5ndGgsIGluZGV4IDpudW1iZXIgPSAwOyBpbmRleDxsZW5ndGg7ICsraW5kZXggKSB7XG5cdFx0aWYgKCB0eXBlb2YgYXJyYXlbaW5kZXhdIT09J3N0cmluZycgKSB7IHJldHVybiB0cnVlOyB9XG5cdH1cblx0cmV0dXJuIGZhbHNlO1xufVxuIl19",
			"import undefined from '.undefined';\nimport { isArray, isBuffer, toStringFollowBOM } from './global';\nimport TypeError from '.TypeError';\nimport RangeError from '.RangeError';\nimport Error from '.Error';\nimport { POSITIVE_INTEGER, notStringArray } from './util';\nvar BOM = /^\\uFEFF/;\nvar EOL = /\\r\\n?|\\n/;\nexport default function parse(tabLines, _reviver, _number, _debug) {\n    if (!isArray(tabLines)) {\n        if (typeof tabLines === 'string') {\n            tabLines = tabLines.replace(BOM, '').split(EOL);\n        }\n        else if (isBuffer(tabLines)) {\n            tabLines = toStringFollowBOM(tabLines).split(EOL);\n        }\n    }\n    if (_reviver == null) {\n        var countEmpties = true;\n        var groupRevivers = null;\n        var levelReviver = null;\n    }\n    else {\n        // @ts-ignore\n        countEmpties = _reviver.empty;\n        // @ts-ignore\n        groupRevivers = _reviver.group;\n        // @ts-ignore\n        levelReviver = _reviver.level;\n        if (countEmpties === undefined) {\n            countEmpties = true;\n        }\n        if (groupRevivers === undefined) {\n            groupRevivers = null;\n        }\n        if (levelReviver === undefined) {\n            levelReviver = null;\n        }\n    }\n    if (_number === undefined) {\n        _number = 1;\n    }\n    if (_debug !== false) {\n        if (arguments.length > 4) {\n            throw new Error('jTabDoc.parse(tabLines, reviver, number, debug, ...)');\n        }\n        if (_debug === undefined) {\n            _debug = true;\n        }\n        else if (_debug !== true) {\n            throw new TypeError('jTabDoc.stringify(,,,debug)');\n        }\n        if (!isArray(tabLines)) {\n            throw new TypeError('jTabDoc.parse(tabLines)');\n        }\n        if (notStringArray(tabLines)) {\n            throw new TypeError('jTabDoc.parse(tabLines[*])');\n        }\n        if (typeof countEmpties !== 'boolean') {\n            throw new TypeError('jTabDoc.parse(,reviver.empty)');\n        }\n        if (groupRevivers !== null && typeof groupRevivers !== 'boolean') {\n            if (!isArray(groupRevivers)) {\n                throw new TypeError('jTabDoc.parse(,reviver.group)');\n            }\n            var length = groupRevivers.length;\n            if (!length) {\n                throw new Error('jTabDoc.parse(,reviver.group.length)');\n            }\n            var index = 0;\n            do {\n                var each = groupRevivers[index];\n                if (!each) {\n                    throw new TypeError('jTabDoc.parse(,reviver.group[*])');\n                }\n                if (!each[0] || typeof each[0].exec !== 'function') {\n                    throw new TypeError('jTabDoc.parse(,reviver.group[*][0])');\n                }\n                if (typeof each[1] !== 'function') {\n                    throw new TypeError('jTabDoc.parse(,reviver.group[*][1])');\n                }\n            } while (++index < length);\n        }\n        if (levelReviver !== null && typeof levelReviver !== 'function') {\n            throw new TypeError('jTabDoc.parse(,reviver.level)');\n        }\n        if (typeof _number !== 'number') {\n            throw new TypeError('jTabDoc.parse(,,number)');\n        }\n        if (!POSITIVE_INTEGER.test(_number + '')) {\n            throw new RangeError('jTabDoc.parse(,,number)');\n        }\n    }\n    return tabLines.length === 0\n        ? levelReviver === null ? [] : levelReviver([], this)\n        : Level(this, tabLines, groupRevivers\n            ? appendGroup\n            : appendFlat, countEmpties, groupRevivers, levelReviver, _number, _debug);\n}\n;\nfunction Level(context, tabLines, append, countEmpties, groupRevivers, levelReviver, number, debug) {\n    var level = [], lastIndex = tabLines.length - 1, index = 0, blank = tabLines[0].length === 0;\n    outer: for (;;) {\n        var from = index;\n        if (blank) {\n            if (countEmpties) {\n                for (;;) {\n                    if (index === lastIndex) {\n                        level.push(index + 1 - from);\n                        break outer;\n                    }\n                    if (tabLines[++index].length !== 0) {\n                        level.push(index - from);\n                        blank = false;\n                        break;\n                    }\n                }\n            }\n            else {\n                for (;;) {\n                    if (index === lastIndex) {\n                        break outer;\n                    }\n                    if (tabLines[++index].length !== 0) {\n                        blank = false;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            for (;;) {\n                if (index === lastIndex) {\n                    // @ts-ignore\n                    append(context, level, countEmpties, groupRevivers, levelReviver, tabLines, from, index, number, debug);\n                    break outer;\n                }\n                if (tabLines[++index].length === 0) {\n                    // @ts-ignore\n                    append(context, level, countEmpties, groupRevivers, levelReviver, tabLines, from, index - 1, number, debug);\n                    blank = true;\n                    break;\n                }\n            }\n        }\n    }\n    level.number = number;\n    return levelReviver === null ? level : levelReviver(level, context);\n}\nfunction appendFlat(context, level, countEmpties, groupRevivers, levelReviver, tabLines, firstIndex, lastIndex, baseNumber, debug) {\n    var key, value, number;\n    outer: for (var lineIndex = firstIndex, line = tabLines[lineIndex], tabIndex = line.indexOf('\\t');;) {\n        value = [];\n        number = baseNumber + lineIndex;\n        if (tabIndex === -1) {\n            key = '';\n            value.push(line);\n            for (;;) {\n                if (lineIndex === lastIndex) {\n                    break outer;\n                }\n                line = tabLines[++lineIndex];\n                tabIndex = line.indexOf('\\t');\n                if (tabIndex !== -1) {\n                    break;\n                }\n                value.push(line);\n            }\n        }\n        else {\n            if (tabIndex === 0) {\n                key = '\\t';\n                value.push(line.slice(1));\n            }\n            else {\n                key = line.slice(0, tabIndex + 1);\n                value.push(line.slice(tabIndex + 1));\n            }\n            for (;;) {\n                if (lineIndex === lastIndex) {\n                    if (groupRevivers === null) {\n                        value = Level(context, value, appendFlat, countEmpties, null, levelReviver, number, debug);\n                    }\n                    break outer;\n                }\n                line = tabLines[++lineIndex];\n                tabIndex = line.indexOf('\\t');\n                if (tabIndex !== 0) {\n                    break;\n                }\n                value.push(line.slice(1));\n            }\n            if (groupRevivers === null) {\n                value = Level(context, value, appendFlat, countEmpties, null, levelReviver, number, debug);\n            }\n        }\n        level.push({\n            key: key,\n            value: value,\n            number: number\n        });\n    }\n    level.push({\n        key: key,\n        value: value,\n        number: number\n    });\n}\nfunction appendGroup(context, level, countEmpties, groupRevivers, levelReviver, tabLines, firstIndex, lastIndex, baseNumber, debug) {\n    var pendingGroup = [], pendingKeys = '', key, value, number;\n    outer: for (var lineIndex = firstIndex, line = tabLines[lineIndex], tabIndex = line.indexOf('\\t');;) {\n        value = [];\n        number = baseNumber + lineIndex;\n        if (tabIndex === -1) {\n            key = '';\n            value.push(line);\n            pendingKeys += '\\n';\n            for (;;) {\n                if (lineIndex === lastIndex) {\n                    break outer;\n                }\n                line = tabLines[++lineIndex];\n                tabIndex = line.indexOf('\\t');\n                if (tabIndex !== -1) {\n                    break;\n                }\n                value.push(line);\n            }\n        }\n        else {\n            if (tabIndex === 0) {\n                key = '\\t';\n                value.push(line.slice(1));\n                pendingKeys += '\\t\\n';\n            }\n            else {\n                key = line.slice(0, tabIndex + 1);\n                pendingKeys += key + '\\n';\n                value.push(line.slice(tabIndex + 1));\n            }\n            for (;;) {\n                if (lineIndex === lastIndex) {\n                    break outer;\n                }\n                line = tabLines[++lineIndex];\n                tabIndex = line.indexOf('\\t');\n                if (tabIndex !== 0) {\n                    break;\n                }\n                value.push(line.slice(1));\n            }\n        }\n        pendingGroup.push({\n            key: key,\n            value: value,\n            number: number\n        });\n    }\n    pendingGroup.push({\n        key: key,\n        value: value,\n        number: number\n    });\n    if (groupRevivers === true) {\n        level.push(pendingGroup.length === 1 ? pendingGroup[0] : pendingGroup);\n        return;\n    }\n    for (var first = groupRevivers[0], reviverLength = groupRevivers.length, reviverIndex = 0, regExp_function = first;;) {\n        var matched = regExp_function[0].exec(pendingKeys);\n        if (matched === null) {\n            if (++reviverIndex === reviverLength) {\n                throw new Error('jTabDoc.parse(,reviver.group[!])');\n            }\n            regExp_function = groupRevivers[reviverIndex];\n        }\n        else {\n            if (debug) {\n                if (matched === undefined) {\n                    throw new Error('jTabDoc.parse(,reviver.group[*][0].exec())');\n                }\n                if (matched.index) {\n                    throw new Error('jTabDoc.parse(,reviver.group[*][0].exec().index)');\n                }\n                if (typeof matched[0] !== 'string') {\n                    throw new TypeError('jTabDoc.parse(,reviver.group[*][0].exec()[0])');\n                }\n                if (matched[0].length === 0) {\n                    throw new Error('jTabDoc.parse(,reviver.group[*][0].exec()[0].length)');\n                }\n                if (matched[0].charAt(matched[0].length - 1) !== '\\n') {\n                    throw new Error('jTabDoc.parse(,reviver.group[*][0].exec()[0])');\n                }\n            }\n            var thisKeys = matched[0];\n            var keyLength = thisKeys.length;\n            if (pendingKeys.length === keyLength) {\n                level.push(regExp_function[1](pendingGroup.length === 1 ? pendingGroup[0] : pendingGroup, context));\n                if (debug) {\n                    if (level[level.length - 1] === undefined) {\n                        throw new TypeError('jTabDoc.parse(,reviver.group[*][1]())');\n                    }\n                }\n                return;\n            }\n            var count = 1;\n            for (var indexOfLF = thisKeys.indexOf('\\n');; ++count) {\n                indexOfLF = thisKeys.indexOf('\\n', indexOfLF + 1);\n                if (indexOfLF < 0) {\n                    break;\n                }\n            }\n            level.push(regExp_function[1]((count === 1 ? pendingGroup.shift() : pendingGroup.splice(0, count)), context));\n            if (debug) {\n                if (level[level.length - 1] === undefined) {\n                    throw new TypeError('jTabDoc.parse(,reviver.group[*][1]())');\n                }\n            }\n            pendingKeys = pendingKeys.slice(keyLength);\n            reviverIndex = 0;\n            regExp_function = first;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
			"export default Array.prototype.push;",
			"import undefined from '.undefined';\nimport { isArray } from './global';\nimport push from '.Array.prototype.push';\nimport TypeError from '.TypeError';\nimport Error from '.Error';\nimport { notStringArray } from './util';\nexport default function stringify(level, _replacer, _space, _debug) {\n    if (_debug !== false) {\n        if (arguments.length > 4) {\n            throw new Error('jTabDoc.stringify(level, replacer, space, debug, ...)');\n        }\n        if (_debug === undefined) {\n            _debug = true;\n        }\n        else if (_debug !== true) {\n            throw new TypeError('jTabDoc.stringify(,,,debug)');\n        }\n        if (_replacer != null && typeof _replacer !== 'function') {\n            throw new TypeError('jTabDoc.stringify(,replacer)');\n        }\n        if (_space != null && typeof _space !== 'function') {\n            throw new TypeError('jTabDoc.stringify(,,space)');\n        }\n    }\n    if (_replacer === undefined) {\n        _replacer = null;\n    }\n    if (_space === undefined) {\n        _space = null;\n    }\n    return Lines(this, level, _replacer, _space, _debug);\n}\n;\nfunction Lines(context, level, replacer, space, debug) {\n    if (replacer !== null) {\n        level = replacer(level, context);\n    }\n    if (debug) {\n        if (!isArray(level)) {\n            throw new TypeError('jTabDoc.stringify(level)');\n        }\n    }\n    var lines = [];\n    for (var levelLength = level.length, levelIndex = 0; levelIndex < levelLength; ++levelIndex) {\n        var each = level[levelIndex];\n        if (debug) {\n            check(each, replacer);\n        }\n        if (typeof each === 'number') {\n            while (each--) {\n                lines.push('');\n            }\n        }\n        else if (each.key === '') {\n            push.apply(lines, each.value);\n        }\n        else if (space === null) {\n            pushes(lines, each.key, '\\t', replacer === null\n                ? Lines(context, each.value, null, space, debug)\n                : each.value);\n        }\n        else {\n            var keys = [each.key];\n            var values = [each.value];\n            while (++levelIndex < levelLength) {\n                each = level[levelIndex];\n                if (debug) {\n                    check(each, replacer);\n                }\n                if (typeof each === 'number') {\n                    --levelIndex;\n                    break;\n                }\n                keys.push(each.key);\n                values.push(each.value);\n            }\n            var keys_indent = space(keys, context);\n            if (debug) {\n                if (typeof keys_indent !== 'object' || keys_indent === null) {\n                    throw new TypeError('jTabDoc.stringify(,,space())');\n                }\n                if (!('keys' in keys_indent) || !('indent' in keys_indent)) {\n                    throw new Error('jTabDoc.stringify(,,space())');\n                }\n                if (!isArray(keys_indent.keys)) {\n                    throw new TypeError('jTabDoc.stringify(,,space().keys)');\n                }\n                if (keys_indent.keys.length !== values.length) {\n                    throw new Error('jTabDoc.stringify(,,space().keys.length)');\n                }\n                if (notStringArray(keys_indent.keys)) {\n                    throw new TypeError('jTabDoc.stringify(,,space().keys[*])');\n                }\n                if (typeof keys_indent.indent !== 'string') {\n                    throw new TypeError('jTabDoc.stringify(,,space().indent)');\n                }\n            }\n            keys = keys_indent.keys;\n            var indent = keys_indent.indent;\n            for (var length = values.length, index = 0; index < length; ++index) {\n                if (keys[index] === '') {\n                    push.apply(lines, values[index]);\n                }\n                else {\n                    pushes(lines, keys[index], indent, replacer === null\n                        ? Lines(context, values[index], null, space, debug)\n                        : values[index]);\n                }\n            }\n        }\n    }\n    return lines;\n}\nfunction pushes(lines, key, indent, subLines) {\n    var length = subLines.length;\n    if (length === 0) {\n        lines.push(key);\n    }\n    else {\n        lines.push(key + subLines[0]);\n        for (var index = 1; index < length; ++index) {\n            lines.push(indent + subLines[index]);\n        }\n    }\n}\nfunction check(each, replacer) {\n    if (typeof each === 'object' && each !== null) {\n        // @ts-ignore\n        if (!('key' in each) || !('value' in each)) {\n            throw new Error('jTabDoc.stringify(' + (replacer ? ',replacer()' : 'level') + '[*]:object)');\n        }\n        if (typeof each.key !== 'string' || !/^(?:[^\\t\\n\\r]*\\t)?$/.test(each.key)) {\n            throw new Error('jTabDoc.stringify(' + (replacer ? ',replacer()' : 'level') + '[*]:object.key)');\n        }\n        if (replacer !== null || each.key === '') {\n            if (!isArray(each.value)) {\n                throw new TypeError('jTabDoc.stringify(' + (replacer ? ',replacer()' : 'level') + '[*]:object.value)');\n            }\n            if (notStringArray(each.value)) {\n                throw new TypeError('jTabDoc.stringify(' + (replacer ? ',replacer()' : 'level') + '[*]:object.value[*])');\n            }\n        }\n    }\n    else if (typeof each === 'number') {\n        if (!/^\\d+$/.test(each + '')) {\n            throw new Error('jTabDoc.stringify(' + (replacer ? ',replacer()' : 'level') + '[*]:number)');\n        }\n    }\n    else {\n        throw new TypeError('jTabDoc.stringify(' + (replacer ? ',replacer()' : 'level') + '[*])');\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
			"import TypeError from '.TypeError';\nimport RangeError from '.RangeError';\nimport { POSITIVE_INTEGER, repeatSpace } from './util';\nexport default function Space(minWidth, padding) {\n    if (typeof minWidth !== 'number') {\n        throw new TypeError('jTabDoc.Space(minWidth)');\n    }\n    if (typeof padding !== 'number') {\n        throw new TypeError('jTabDoc.Space(,padding)');\n    }\n    var multiple = minWidth < 0;\n    if (multiple) {\n        minWidth = ~minWidth;\n    }\n    if (!POSITIVE_INTEGER.test(minWidth + '')) {\n        throw new RangeError('jTabDoc.Space(minWidth)');\n    }\n    if (!POSITIVE_INTEGER.test(padding + '')) {\n        throw new RangeError('jTabDoc.Space(,padding)');\n    }\n    return function space(keys) {\n        return keys_indent(multiple, minWidth, padding, keys);\n    };\n}\n;\nfunction keys_indent(multiple, minWidth, padding, keys) {\n    var maxWidth = 1;\n    var widths = [];\n    for (var length = keys.length, index = 0; index < length; ++index) {\n        var width = 0;\n        var key = keys[index];\n        if (key !== '') {\n            for (var l = key.length - 1, i = 0; i < l; ++i) {\n                var charCode = key.charCodeAt(i);\n                if (charCode < 0x80) {\n                    width += 1;\n                }\n                else {\n                    width += 2;\n                    if (charCode >= 0xD800 && charCode <= 0xDBFF && i + 1 < l) {\n                        charCode = key.charCodeAt(i + 1);\n                        charCode >= 0xDC00 && charCode <= 0xDFFF && ++i;\n                    }\n                }\n            }\n            if (width > maxWidth) {\n                maxWidth = width;\n            }\n        }\n        widths.push(width);\n    }\n    width = maxWidth + padding;\n    if (multiple) {\n        if (width % minWidth) {\n            width += minWidth - width % minWidth;\n        }\n    }\n    else {\n        if (width < minWidth) {\n            width = minWidth;\n        }\n    }\n    for (index = 0; index < length; ++index) {\n        key = keys[index];\n        if (key !== '') {\n            keys[index] = key.slice(0, -1) + repeatSpace(width - widths[index]);\n        }\n    }\n    return { keys: keys, indent: repeatSpace(width) };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUM7SUFDekIsSUFBSyxRQUFRLEVBQUc7UUFDZixJQUFLLEtBQUssR0FBQyxRQUFRLEVBQUc7WUFBRSxLQUFLLElBQUksUUFBUSxHQUFDLEtBQUssR0FBQyxRQUFRLENBQUM7U0FBRTtLQUMzRDtTQUNJO1FBQ0osSUFBSyxLQUFLLEdBQUMsUUFBUSxFQUFHO1lBQUUsS0FBSyxHQUFHLFFBQVEsQ0FBQztTQUFFO0tBQzNDO0lBQ0QsS0FBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBQyxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUc7UUFDeEMsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsQixJQUFLLEdBQUcsS0FBRyxFQUFFLEVBQUc7WUFDZixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBQyxXQUFXLENBQUMsS0FBSyxHQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ2hFO0tBQ0Q7SUFDRCxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDbkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUeXBlRXJyb3IgZnJvbSAnLlR5cGVFcnJvcic7XG5pbXBvcnQgUmFuZ2VFcnJvciBmcm9tICcuUmFuZ2VFcnJvcic7XG5pbXBvcnQgeyBQT1NJVElWRV9JTlRFR0VSLCByZXBlYXRTcGFjZSB9IGZyb20gJy4vdXRpbCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNwYWNlIChtaW5XaWR0aCA6bnVtYmVyLCBwYWRkaW5nIDpudW1iZXIpIDooa2V5cyA6c3RyaW5nW10pID0+IHsga2V5cyA6dHlwZW9mIGtleXMsIGluZGVudCA6c3RyaW5nIH0ge1xuXHRpZiAoIHR5cGVvZiA8dW5rbm93bj5taW5XaWR0aCE9PSdudW1iZXInICkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdqVGFiRG9jLlNwYWNlKG1pbldpZHRoKScpOyB9XG5cdGlmICggdHlwZW9mIDx1bmtub3duPnBhZGRpbmchPT0nbnVtYmVyJyApIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignalRhYkRvYy5TcGFjZSgscGFkZGluZyknKTsgfVxuXHR2YXIgbXVsdGlwbGUgOmJvb2xlYW4gPSBtaW5XaWR0aDwwO1xuXHRpZiAoIG11bHRpcGxlICkgeyBtaW5XaWR0aCA9IH5taW5XaWR0aDsgfVxuXHRpZiAoICFQT1NJVElWRV9JTlRFR0VSLnRlc3QobWluV2lkdGgrJycpICkgeyB0aHJvdyBuZXcgUmFuZ2VFcnJvcignalRhYkRvYy5TcGFjZShtaW5XaWR0aCknKTsgfVxuXHRpZiAoICFQT1NJVElWRV9JTlRFR0VSLnRlc3QocGFkZGluZysnJykgKSB7IHRocm93IG5ldyBSYW5nZUVycm9yKCdqVGFiRG9jLlNwYWNlKCxwYWRkaW5nKScpOyB9XG5cdHJldHVybiBmdW5jdGlvbiBzcGFjZSAoa2V5cyA6c3RyaW5nW10pIDp7IGtleXMgOnR5cGVvZiBrZXlzLCBpbmRlbnQgOnN0cmluZyB9IHtcblx0XHRyZXR1cm4ga2V5c19pbmRlbnQobXVsdGlwbGUsIG1pbldpZHRoLCBwYWRkaW5nLCBrZXlzKTtcblx0fTtcbn07XG5cbmZ1bmN0aW9uIGtleXNfaW5kZW50IChtdWx0aXBsZSA6Ym9vbGVhbiwgbWluV2lkdGggOm51bWJlciwgcGFkZGluZyA6bnVtYmVyLCBrZXlzIDpzdHJpbmdbXSkgOnsga2V5cyA6dHlwZW9mIGtleXMsIGluZGVudCA6c3RyaW5nIH0ge1xuXHR2YXIgbWF4V2lkdGggOm51bWJlciA9IDE7XG5cdHZhciB3aWR0aHMgOm51bWJlcltdID0gW107XG5cdGZvciAoIHZhciBsZW5ndGggOm51bWJlciA9IGtleXMubGVuZ3RoLCBpbmRleCA6bnVtYmVyID0gMDsgaW5kZXg8bGVuZ3RoOyArK2luZGV4ICkge1xuXHRcdHZhciB3aWR0aCA6bnVtYmVyID0gMDtcblx0XHR2YXIga2V5IDpzdHJpbmcgPSBrZXlzW2luZGV4XTtcblx0XHRpZiAoIGtleSE9PScnICkge1xuXHRcdFx0Zm9yICggdmFyIGwgOm51bWJlciA9IGtleS5sZW5ndGgtMSwgaSA6bnVtYmVyID0gMDsgaTxsOyArK2kgKSB7XG5cdFx0XHRcdHZhciBjaGFyQ29kZSA6bnVtYmVyID0ga2V5LmNoYXJDb2RlQXQoaSk7XG5cdFx0XHRcdGlmICggY2hhckNvZGU8MHg4MCApIHsgd2lkdGggKz0gMTsgfVxuXHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHR3aWR0aCArPSAyO1xuXHRcdFx0XHRcdGlmICggY2hhckNvZGU+PTB4RDgwMCAmJiBjaGFyQ29kZTw9MHhEQkZGICYmIGkrMTxsICkge1xuXHRcdFx0XHRcdFx0Y2hhckNvZGUgPSBrZXkuY2hhckNvZGVBdChpKzEpO1xuXHRcdFx0XHRcdFx0Y2hhckNvZGU+PTB4REMwMCAmJiBjaGFyQ29kZTw9MHhERkZGICYmICsraTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICggd2lkdGg+bWF4V2lkdGggKSB7IG1heFdpZHRoID0gd2lkdGg7IH1cblx0XHR9XG5cdFx0d2lkdGhzLnB1c2god2lkdGgpO1xuXHR9XG5cdHdpZHRoID0gbWF4V2lkdGgrcGFkZGluZztcblx0aWYgKCBtdWx0aXBsZSApIHtcblx0XHRpZiAoIHdpZHRoJW1pbldpZHRoICkgeyB3aWR0aCArPSBtaW5XaWR0aC13aWR0aCVtaW5XaWR0aDsgfVxuXHR9XG5cdGVsc2Uge1xuXHRcdGlmICggd2lkdGg8bWluV2lkdGggKSB7IHdpZHRoID0gbWluV2lkdGg7IH1cblx0fVxuXHRmb3IgKCBpbmRleCA9IDA7IGluZGV4PGxlbmd0aDsgKytpbmRleCApIHtcblx0XHRrZXkgPSBrZXlzW2luZGV4XTtcblx0XHRpZiAoIGtleSE9PScnICkge1xuXHRcdFx0a2V5c1tpbmRleF0gPSBrZXkuc2xpY2UoMCwgLTEpK3JlcGVhdFNwYWNlKHdpZHRoLXdpZHRoc1tpbmRleF0pO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4geyBrZXlzOiBrZXlzLCBpbmRlbnQ6IHJlcGVhdFNwYWNlKHdpZHRoKSB9O1xufVxuIl19",
			"import version from './version?text';\nimport parse from './parse';\nimport stringify from './stringify';\nimport Space from './Space';\nvar jTabDoc = {\n    parse: parse,\n    stringify: stringify,\n    Space: Space,\n    version: version\n};\njTabDoc['default'] = jTabDoc;\nexport { parse, stringify, Space, version };\nexport default jTabDoc;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cG9ydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLE9BQU8sTUFBTSxnQkFBZ0IsQ0FBQztBQUNyQyxPQUFPLEtBQUssTUFBTSxTQUFTLENBQUM7QUFDNUIsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBQ3BDLE9BQU8sS0FBSyxNQUFNLFNBQVMsQ0FBQztBQUM1QixJQUFJLE9BQU8sR0FBRztJQUNiLEtBQUssRUFBRSxLQUFLO0lBQ1osU0FBUyxFQUFFLFNBQVM7SUFDcEIsS0FBSyxFQUFFLEtBQUs7SUFDWixPQUFPLEVBQUUsT0FBTztDQUNoQixDQUFDO0FBQ0YsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLE9BQU8sQ0FBQztBQUM3QixPQUFPLEVBQ04sS0FBSyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsT0FBTyxFQUNQLENBQUM7QUFDRixlQUFlLE9BQU8sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2ZXJzaW9uIGZyb20gJy4vdmVyc2lvbj90ZXh0JztcbmltcG9ydCBwYXJzZSBmcm9tICcuL3BhcnNlJztcbmltcG9ydCBzdHJpbmdpZnkgZnJvbSAnLi9zdHJpbmdpZnknO1xuaW1wb3J0IFNwYWNlIGZyb20gJy4vU3BhY2UnO1xudmFyIGpUYWJEb2MgPSB7XG5cdHBhcnNlOiBwYXJzZSxcblx0c3RyaW5naWZ5OiBzdHJpbmdpZnksXG5cdFNwYWNlOiBTcGFjZSxcblx0dmVyc2lvbjogdmVyc2lvblxufTtcbmpUYWJEb2NbJ2RlZmF1bHQnXSA9IGpUYWJEb2M7XG5leHBvcnQge1xuXHRwYXJzZSxcblx0c3RyaW5naWZ5LFxuXHRTcGFjZSxcblx0dmVyc2lvblxufTtcbmV4cG9ydCBkZWZhdWx0IGpUYWJEb2M7Il19"
		]
}